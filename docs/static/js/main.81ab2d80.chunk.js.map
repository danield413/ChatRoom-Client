{"version":3,"sources":["types/types.js","actions/auth.js","actions/dashboard.js","components/dashboard/Online.js","components/dashboard/All.js","actions/stats.js","helpers/cutName.js","components/dashboard/LinkButton.js","components/dashboard/Aside.js","components/dashboard/AsideResponsive.js","components/dashboard/MessageReceived.js","components/dashboard/MessageSent.js","components/dashboard/ModalInfo.js","components/dashboard/ChatInput.js","components/dashboard/Chat.js","components/dashboard/PrivateChat.js","context/SocketProvider.js","components/dashboard/DashboardScreen.js","components/statistics/StatisticsScreen.js","components/auth/GoogleButton.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","router/AuthRouter.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/dashboardReducer.js","reducers/statsReducer.js","store/store.js","App.js","index.js"],"names":["types","login","data","type","payload","newUser","checkingFinish","logout","addMessages","addChatMessages","selectUser","openSidebar","closeSidebar","cleanDashboard","Online","dispatch","useDispatch","uid","useSelector","state","auth","selectedUser","dashboard","users","className","onClick","name","src","alt","map","user","id","picture","All","allUsers","cleanStats","cutName","split","LinkBtn","styled","a","LinkButton","to","text","history","useHistory","push","Aside","useState","setState","userLeaves","useCallback","find","useEffect","DropdownButton","title","variant","Dropdown","ItemText","Item","as","localStorage","removeItem","ButtonGroup","aria-label","AsideResponsive","motion","button","whileTap","scale","fill","size","MessageReceived","date","div","animate","navigator","clipboard","writeText","then","Swal","fire","MessageSent","ModalInfo","show","handleClose","participants","Modal","onHide","backdrop","keyboard","Header","Title","Body","length","Footer","WrapperInput","MessageInput","input","MessageSubmit","ChatInput","handleSubmit","textRef","onSubmit","ref","placeholder","autoComplete","color","Chat","sendMessage","showMenuButton","setShow","useRef","messages","setRef","node","scrollIntoView","behavior","message","index","lastMessage","_id","e","preventDefault","current","value","propType","PropTypes","func","isRequired","PrivateChat","sendPrivateMessage","loading","setLoading","chatMessages","axios","get","process","headers","getItem","messagesChat","catch","err","Spinner","animation","role","recipient","SocketContext","React","createContext","SocketProvider","children","socket","setSocket","now","Date","moment","format","emit","newSocket","io","query","close","on","off","addUsers","addAllUsers","setStats","values","Provider","DashboardScreen","window","screen","width","setWidth","showSidebar","useContext","windowResize","target","innerWidth","addEventListener","removeEventListener","Helmet","content","StatisticsScreen","countMessages","stats","Container","fluid","Row","Col","md","ResponsiveContainer","height","BarChart","margin","top","right","left","bottom","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","Div","Logo","Text","GoogleButton","url","location","hostname","includes","doFetch","id_token","fetch","method","body","JSON","stringify","res","json","email","google","token","setItem","console","log","onSuccess","tokenId","clientId","cookiePolicy","render","renderProps","disabled","LoginScreen","formik","useFormik","initialValues","password","validationSchema","Yup","required","min","post","ok","msg","startLogin","charSet","Form","Group","Control","onChange","handleChange","onBlur","handleBlur","isInvalid","errors","Button","RegisterScreen","position","icon","showConfirmButton","timer","startRegister","AuthRouter","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","exact","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.81ab2d80.chunk.js","sourcesContent":["export const types = {\r\n    authCheckingJWTFinish: \"AUTH checking JWT finish\",\r\n    authLogin: \"AUTH login\",\r\n    authLogout: \"AUTH logout\",\r\n    newUser: \"AUTH new user\",\r\n\r\n    addMessages: \"DASHBOARD add messages\",\r\n    addChatMessages: \"DASHBOARD add chat messages\",\r\n    addUsers: \"DASHBOARD add users\",\r\n    cleanDashboard: \"DASHBOARD clean\",\r\n    selectUser: \"DASHBOARD select user\",\r\n    addAllUsers: \"DASHBOARD add all registered users\",\r\n    openSidebar: \"DASHBOARD open sidebar\",\r\n    closeSidebar: \"DASHBOARD close sidebar\",\r\n    \r\n    loadStats: \"STATS load stats\",\r\n    cleanStats: \"STATS clean stats\",\r\n}","import axios from \"axios\";\r\nimport Swal from 'sweetalert2'\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async(dispatch) => {\r\n\r\n        const { data } = await axios.post(`${process.env.REACT_APP_API_URL}/auth/login`, {\r\n            email, password\r\n        })\r\n\r\n        if(data.ok){\r\n            localStorage.setItem('chat-token', data.token);\r\n\r\n            dispatch( login({\r\n                uid: data.user.uid,\r\n                name: data.user.name,\r\n                email: data.user.email,\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', data.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const login = ( data ) => ({\r\n    type: types.authLogin,\r\n    payload: data\r\n});\r\n\r\nexport const startRegister = ( name, email, password ) => {\r\n    return async(dispatch) => {\r\n        const { data } = await axios.post(`${process.env.REACT_APP_API_URL}/auth/register`, {\r\n            name, email, password\r\n        });\r\n \r\n        if(data.ok) {\r\n            localStorage.setItem('chat-token', data.token);\r\n            \r\n            dispatch( newUser() );\r\n\r\n            dispatch( login({\r\n                uid: data.user.uid,\r\n                name: data.user.name,\r\n                email: data.user.email,\r\n                picture: data.user.picture\r\n            }));\r\n\r\n            Swal.fire({\r\n                position: 'bottom-end',\r\n                icon: 'success',\r\n                title: 'Cuenta creada',\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            })\r\n        } else {\r\n            Swal.fire('Error', data.msg, 'error')\r\n        } \r\n\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n        const { data } = await axios.get(`${process.env.REACT_APP_API_URL}/auth/renew`,{\r\n            headers: {\r\n                'x-token': localStorage.getItem('chat-token'),\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        if(data.ok) {\r\n            localStorage.setItem('chat-token', data.token);\r\n\r\n            dispatch( login({\r\n                uid: data.user.uid,\r\n                name: data.user.name,\r\n                email: data.user.email,\r\n                picture: data.user.picture\r\n            }))\r\n        } else {\r\n            dispatch( checkingFinish() )\r\n        }\r\n    }\r\n}\r\n\r\nconst newUser = () => ({ type: types.newUser })\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingJWTFinish })\r\n\r\nexport const logout = () => ({type: types.authLogout})\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const addMessages = ( payload ) => ({\r\n    type: types.addMessages,\r\n    payload\r\n})\r\n\r\nexport const addChatMessages = (payload) => ({\r\n    type: types.addChatMessages,\r\n    payload\r\n})\r\n\r\nexport const addUsers = ( payload ) => ({\r\n    type: types.addUsers,\r\n    payload\r\n})\r\n\r\nexport const selectUser = ( payload ) => ({\r\n    type: types.selectUser,\r\n    payload\r\n})\r\n\r\nexport const addAllUsers = ( payload ) => ({\r\n    type: types.addAllUsers,\r\n    payload\r\n})\r\n\r\nexport const openSidebar = () => ({ type: types.openSidebar })\r\nexport const closeSidebar = () => ({ type: types.closeSidebar })\r\n\r\nexport const cleanDashboard = () => ({ type: types.cleanDashboard })","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { closeSidebar, selectUser } from '../../actions/dashboard';\r\n\r\nexport const Online = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { uid } = useSelector(state => state.auth);\r\n    const { selectedUser } = useSelector(state => state.dashboard);\r\n    const { users } = useSelector(state => state.dashboard);\r\n\r\n    return (\r\n        <>\r\n            <h6 className=\"lead ms-4 my-3 \"><strong className=\"text-light text-resp\">Conectados</strong></h6>\r\n                <button \r\n                    onClick={ () => {\r\n                        dispatch( selectUser({}) )\r\n                        dispatch( closeSidebar() )\r\n                    }}\r\n                    className={`text-white w-100 text-start animate__animated animate animate__fadeIn user-sidebar ${!selectedUser?.name && !selectedUser?.uid ? 'user-sidebar-active' : ''}`} \r\n                >\r\n                    <img src=\"./assets/img1.jpg\" alt=\"default\" className=\"ms-3 mr-10 img-topbar\"/>\r\n                    <span className=\"fw-bold text-resp\">Chat general <i className=\"fas fa-circle mx-2 fz-12px text-online\" ></i></span>\r\n                </button>\r\n                <div className=\"w-100 overflow-auto online-height\">\r\n                    {users &&\r\n                        users.map(user => (\r\n                            (user?.id !== uid) &&\r\n                                <button \r\n                                    key={user.id} \r\n                                    onClick={ () => {\r\n                                        dispatch( selectUser({ uid: user?.id, name: user?.name, picture: user?.picture }) )\r\n                                        dispatch( closeSidebar() )\r\n                                    } }\r\n                                    className={`text-resp text-white w-100 text-start animate__animated animate animate__fadeIn user-sidebar ${user.id === selectedUser?.uid ? 'user-sidebar-active' : ''}`} \r\n                                >\r\n                                    {(user.picture !== 'undefined' && user.picture !== 'null')\r\n                                        ? <img src={user.picture} alt={user.name} className=\"ms-3 mr-10 img-topbar\"/>\r\n                                        : <img src=\"./assets/default-user.png\" alt=\"default\" className=\"ms-3 mr-10 img-topbar\"/>\r\n                                    }\r\n                                    <span className=\"fw-bold text-resp\">{user.name} <i className=\"fas fa-circle mx-2 text-online\"></i></span>\r\n                                </button>\r\n                        ))\r\n                    }\r\n                </div>\r\n                    \r\n        </>\r\n    )\r\n}\r\n ","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport const All = () => {\r\n\r\n    const { allUsers } = useSelector(state => state.dashboard);\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    return (\r\n        <>\r\n            <h5 className=\"lead ms-4 my-3\"><strong className=\"text-light text-resp\">Todos</strong></h5>\r\n            <div className=\"w-100 overflow-auto all-height\">\r\n            {allUsers &&\r\n                allUsers.map(user => (\r\n                    (user?.id !== uid) &&\r\n                        <button \r\n                            key={user.uid} \r\n                            className=\"text-white w-100 text-start animate__animated animate animate__fadeIn user-sidebar\" \r\n                        >\r\n                            {user.picture \r\n                                ? <img src={user?.picture} alt={user?.name} className=\"ms-3 mr-10 img-topbar\"/>\r\n                                : <img src=\"./assets/default-user.png\" alt=\"default\" className=\"ms-3 mr-10 img-topbar\"/>\r\n                            }\r\n                            <span className=\"fw-bold\">{user.name}</span>\r\n                        </button>\r\n                ))\r\n            }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setStats = (payload) => ({\r\n    type: types.loadStats,\r\n    payload\r\n})\r\n\r\nexport const cleanStats = () => ({ type: types.cleanStats })","\r\n\r\nexport const cutName = (name) => {\r\n    if(name) {\r\n        const split = name.split(' ');\r\n        return split[0];\r\n    }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { closeSidebar } from '../../actions/dashboard';\r\nimport { IoIosStats } from 'react-icons/io';\r\nimport { BsFillCaretLeftFill } from 'react-icons/bs';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst LinkBtn = styled.a`\r\n    border: 2px solid cyan;\r\n    background-color: transparent;\r\n    color: cyan;\r\n    padding: 5px 10px;\r\n    border-radius: 5px;\r\n    transition: 0.2s ease-in;\r\n    text-decoration: none;\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        background-color: cyan;\r\n        color: black;\r\n    }\r\n`\r\n\r\nexport const LinkButton = ({to, text}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const redirect = () => {\r\n        history.push( to );\r\n    }\r\n\r\n    return (\r\n        <LinkBtn\r\n            className=\"text-resp link-button px-3 fw-bold\"\r\n            onClick={() => {\r\n                dispatch(closeSidebar())\r\n                redirect()\r\n            }}\r\n        >\r\n            {text === 'Estadísticas'\r\n            ? <IoIosStats />\r\n            : <BsFillCaretLeftFill />\r\n            }\r\n            {text}\r\n        </LinkBtn>\r\n    )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { ButtonGroup, Dropdown, DropdownButton } from 'react-bootstrap';\r\nimport { AiTwotoneSetting } from 'react-icons/ai'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../../actions/auth'\r\nimport { cleanDashboard, selectUser } from '../../actions/dashboard';\r\nimport { Online } from './Online';\r\nimport { All } from './All';\r\nimport { cleanStats } from '../../actions/stats';\r\nimport { cutName } from '../../helpers/cutName';\r\nimport { LinkButton } from './LinkButton';\r\n\r\nexport const Aside = () => {\r\n\r\n    const [state, setState] = useState('online')\r\n    const dispatch = useDispatch();\r\n    const { uid, name, picture } = useSelector(state => state.auth);\r\n    const { users } = useSelector(state => state.dashboard);\r\n    const { selectedUser } = useSelector(state => state.dashboard);\r\n\r\n    const userLeaves = useCallback(() => {\r\n        const u = users.find( user => user.id === selectedUser?.uid );\r\n        if(!u) {\r\n            dispatch( selectUser({}) )\r\n        }\r\n    }, [users, selectedUser?.uid, dispatch])\r\n\r\n    useEffect(() => {\r\n       userLeaves()\r\n    }, [users, userLeaves])\r\n    \r\n    const handleLogout = () => {\r\n        dispatch( logout() );\r\n        dispatch( cleanDashboard() );\r\n        dispatch( cleanStats() );\r\n        localStorage.removeItem('chat-token');\r\n    }\r\n\r\n    return (\r\n        <aside className=\"h-100\">\r\n            <header>\r\n                <div className=\"w-100 bg-dark d-flex justify-content-between align-items-center px-2 header-height\">\r\n                    <div>\r\n                        {picture \r\n                        ? <img src={picture} alt={name} className=\"ms-3 mr-10 img-topbar\"/>\r\n                        : <img src=\"./assets/default-user.png\" alt=\"default\" className=\"ms-3 mr-10 img-topbar\"/>\r\n                        }\r\n                        <span className=\"fw-bold text-white\">\r\n                            {cutName(name)}\r\n                            <i className=\"fas fa-circle mx-2 text-online\"></i>\r\n                        </span>\r\n                    </div>\r\n                    \r\n                    <DropdownButton title={<AiTwotoneSetting />} id=\"dropdown-item-button\" variant=\"dark\" className=\"bg-dark d-inline\">\r\n                        <Dropdown.ItemText className=\"bg-secondary text-light\">\r\n                            <strong>Opciones</strong>\r\n                        </Dropdown.ItemText>\r\n                        <Dropdown.Item as=\"button\" onClick={handleLogout} className=\"bg-secondary text-light\">\r\n                            Salir\r\n                        </Dropdown.Item>\r\n                    </DropdownButton>\r\n                        \r\n                </div>\r\n            </header>\r\n            <p className=\"text-muted text-center mt-2\">ID: {uid}</p>\r\n            <div className=\"w-100 d-flex justify-content-center mb-3\">\r\n               <LinkButton to=\"/stats\" text=\"Estadísticas\"/>\r\n            </div>\r\n            <div>\r\n                <ButtonGroup aria-label=\"selección\" className=\"w-100\">\r\n                    <button \r\n                        onClick={ () => setState('online')} \r\n                        className={`button-group w-50 text-resp ${state === 'online' && 'button-group-active'} fw-bold text-white`}\r\n                    >\r\n                        Conectados\r\n                    </button>\r\n                    <button \r\n                        onClick={ () => setState('all')} \r\n                        className={`button-group w-50 text-resp ${state === 'all' && 'button-group-active'} fw-bold text-white` }\r\n                    >\r\n                        Todos\r\n                    </button>\r\n                </ButtonGroup>\r\n                {( state === 'online' ) \r\n                ? <Online />\r\n                : <All />\r\n                }\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { ButtonGroup, Dropdown, DropdownButton } from 'react-bootstrap';\r\nimport { AiTwotoneSetting } from 'react-icons/ai'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../../actions/auth'\r\nimport { cleanDashboard, closeSidebar, selectUser } from '../../actions/dashboard';\r\nimport { Online } from './Online';\r\nimport { All } from './All';\r\nimport { Link } from 'react-router-dom';\r\nimport { IoIosStats } from 'react-icons/io';\r\nimport { cleanStats } from '../../actions/stats';\r\nimport { VscChromeClose } from 'react-icons/vsc';\r\nimport { motion } from 'framer-motion';\r\nimport { cutName } from '../../helpers/cutName';\r\nimport { LinkButton } from './LinkButton';\r\n\r\nexport const AsideResponsive = () => {\r\n\r\n    const [state, setState] = useState('online')\r\n    const dispatch = useDispatch();\r\n    const { uid, name, picture } = useSelector(state => state.auth);\r\n    const { users } = useSelector(state => state.dashboard);\r\n    const { selectedUser } = useSelector(state => state.dashboard);\r\n\r\n    const userLeaves = useCallback(() => {\r\n        const u = users.find( user => user.id === selectedUser?.uid );\r\n        if(!u) {\r\n            dispatch( selectUser({}) )\r\n        }\r\n    }, [users, selectedUser?.uid, dispatch])\r\n\r\n    useEffect(() => {\r\n       userLeaves()\r\n    }, [users, userLeaves])\r\n    \r\n    const handleLogout = () => {\r\n        dispatch( logout() );\r\n        dispatch( cleanDashboard() );\r\n        dispatch( cleanStats() );\r\n        localStorage.removeItem('chat-token');\r\n    }\r\n\r\n    return (\r\n        <aside className=\"h-100\">\r\n            <header>\r\n                <div className=\"w-100 bg-dark d-flex justify-content-between align-items-center px-2 header-height\">\r\n                    <div>\r\n                        {picture \r\n                        ? <img src={picture} alt={name} className=\"ms-3 mr-10 img-topbar\"/>\r\n                        : <img src=\"./assets/default-user.png\" alt=\"default\" className=\"ms-3 mr-10 img-topbar\"/>\r\n                        }\r\n                        <span className=\"fw-bold text-white text-resp\">\r\n                            {cutName(name)}\r\n                            <i className=\"fas fa-circle mx-2 text-online\"></i>\r\n                        </span>\r\n                    </div>\r\n                    <div>\r\n                        <DropdownButton title={<AiTwotoneSetting />} id=\"dropdown-item-button\" variant=\"dark\" className=\"bg-dark d-inline\">\r\n                            <Dropdown.ItemText className=\"bg-secondary text-light text-resp\">\r\n                                <strong>Opciones</strong>\r\n                            </Dropdown.ItemText>\r\n                            <Dropdown.Item as=\"button\" onClick={handleLogout} className=\"bg-secondary text-light text-resp\">\r\n                                Salir\r\n                            </Dropdown.Item>\r\n                        </DropdownButton>\r\n                        <motion.button \r\n                            onClick={() => dispatch( closeSidebar() ) }\r\n                            whileTap={{ scale: 1.4 }}\r\n                            className=\"sidebar-close\"\r\n                        >\r\n                            <VscChromeClose fill=\"#fff\" size=\"1.4rem\"/>\r\n                        </motion.button>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n            <p className=\"text-muted text-center mt-2\">ID: {uid}</p>\r\n            <div className=\"w-100 d-flex justify-content-center mb-3\">\r\n                <LinkButton to=\"/stats\" text=\"Estadísticas\"/>\r\n            </div>\r\n            <div>\r\n                <ButtonGroup aria-label=\"selección\" className=\"w-100\">\r\n                    <button \r\n                        onClick={ () => setState('online')} \r\n                        className={`text-resp button-group w-50 ${state === 'online' && 'button-group-active'} fw-bold text-white`}\r\n                    >\r\n                        Conectados\r\n                    </button>\r\n                    <button \r\n                        onClick={ () => setState('all')} \r\n                        className={`text-resp button-group w-50 ${state === 'all' && 'button-group-active'} fw-bold text-white` }\r\n                    >\r\n                        Todos\r\n                    </button>\r\n                </ButtonGroup>\r\n                {( state === 'online' ) \r\n                ? <Online />\r\n                : <All />\r\n                }\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { motion } from 'framer-motion';\r\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const MessageReceived = ({text, name, date}) => {\r\n\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText( text ).then(() => {\r\n            Swal.fire('Mensaje copiado')\r\n        })\r\n    }\r\n\r\n    return (\r\n        <motion.div \r\n            animate={{\r\n                scale: [1, 1.1, 1]\r\n            }}\r\n            className=\"text-msg-res px-3 py-1 d-flex flex-column rounded text-white mb-3 animate__animated animate__fadeIn message-received\" \r\n        >\r\n            {name && \r\n            <div className=\"text-msg-res fw-bold d-flex justify-content-between align-items-center\" >\r\n                {name}\r\n                <DropdownButton title=\"\" size=\"sm\" id=\"dropdown-item-button\">\r\n                    <Dropdown.Item as=\"button\" onClick={handleCopy} className=\"bg-secondary text-light text-msg-res\">\r\n                        Copiar texto\r\n                    </Dropdown.Item>\r\n                </DropdownButton>\r\n            </div>}\r\n            \r\n            {text}\r\n            <span className=\"text-date d-block text-muted align-self-end\">{date}</span>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nMessageReceived.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    name: PropTypes.string,\r\n    date: PropTypes.string.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { motion } from 'framer-motion';\r\n\r\nexport const MessageSent = ({text, date}) => {\r\n\r\n    return (\r\n        <motion.div \r\n            animate={{\r\n                scale: [1, 1.1, 1]\r\n            }}\r\n            className=\"text-msg-res px-3 py-1 d-flex flex-column rounded text-white mb-3 animate__animated animate__fadeIn message-sent\" \r\n        >\r\n            {text}\r\n            <span className=\"text-date d-block text-light align-self-end fz-12px\">{date}</span>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nMessageSent.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired\r\n}","import { motion } from 'framer-motion';\r\nimport React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { GrClose } from 'react-icons/gr';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ModalInfo = ({show, handleClose, participants = []}) => {\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n        >\r\n            <Modal.Header>\r\n                <Modal.Title>Información</Modal.Title>\r\n                <motion.button \r\n                    onClick={handleClose}\r\n                    className=\"btn\"\r\n                    whileTap={{scale: 1.4}}\r\n                >\r\n                    <GrClose />\r\n                </motion.button>\r\n            </Modal.Header>\r\n            <Modal.Body >\r\n                <h4 className=\"fw-bold text-center\">Participantes</h4>\r\n                {\r\n                participants.length === 0 \r\n                ? <div className=\"w-100\">\r\n                    <div className=\"alert alert-info text-center text-resp\">\r\n                    Todos los usuarios registrados en <strong>ChatRoom</strong>\r\n                    </div>\r\n                    <img src=\"./assets/chatting-group.svg\" alt=\"chatting-group\" className=\"svg\"/>\r\n                </div>\r\n                : <div className=\"w-100\">\r\n                    <div className=\"alert alert-success text-center\">\r\n                        <strong>{participants[0]} - {participants[1]}</strong>\r\n                    </div>\r\n                    <img src=\"./assets/chatting.svg\" alt=\"chatting\" className=\"svg\"/>\r\n                </div>\r\n                }\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nModalInfo.propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    handleClose: PropTypes.func.isRequired,\r\n    participants: PropTypes.array\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { IoMdSend } from 'react-icons/io';\r\nimport styled from 'styled-components';\r\n\r\nconst WrapperInput = styled.div`\r\n    height: 60px;\r\n    width: 100%; \r\n    padding: 0 10%; \r\n    background: var(--input-chat);\r\n`;\r\n\r\nconst MessageInput = styled.input`\r\n    height: 65%;\r\n    border: 1px solid transparent;\r\n    outline: none;\r\n    border-bottom-left-radius: 5px;\r\n    border-top-left-radius: 5px;\r\n    padding-left: 10px;\r\n    background: rgb(27, 27, 27);\r\n    color: white;\r\n    transition: 0.3s ease;\r\n\r\n    &:focus {\r\n        border: 1px solid var(--bs-primary);\r\n    }\r\n`;\r\n\r\nconst MessageSubmit = styled.button`\r\n    border: none;\r\n    cursor: pointer;\r\n    height: 65%;\r\n    padding: 0 15px;\r\n    border-top-right-radius: 5px;\r\n    border-bottom-right-radius: 5px;\r\n    background-color: var(--bs-primary);\r\n    transition: 0.3s ease;\r\n\r\n    &:hover: {\r\n        background-color: #0f3d81;\r\n    }\r\n`;\r\n\r\nexport const ChatInput = ({handleSubmit, textRef}) => {\r\n    return (\r\n        <WrapperInput >\r\n            <form onSubmit={handleSubmit} className=\"h-100 d-flex align-items-center\">\r\n                <MessageInput ref={textRef} type=\"text\" className=\"w-100\" placeholder=\"Escribe un mensaje\" autoComplete=\"off\"/>\r\n                <MessageSubmit type=\"submit\" className=\"bg-primary\">\r\n                    <IoMdSend color=\"#fff\"/>\r\n                </MessageSubmit>\r\n            </form>\r\n        </WrapperInput>\r\n    )\r\n}\r\n\r\nChatInput.propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    textRef: PropTypes.object.isRequired,\r\n}","import React, { useCallback, useRef, useState } from 'react'\r\nimport { IoIosInformationCircle } from 'react-icons/io'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { MessageReceived } from '../dashboard/MessageReceived';\r\nimport { MessageSent } from '../dashboard/MessageSent';\r\nimport { motion } from 'framer-motion';\r\nimport { ModalInfo } from './ModalInfo';\r\nimport { AiOutlineMenu } from 'react-icons/ai';\r\nimport { openSidebar } from '../../actions/dashboard';\r\nimport { ChatInput } from './ChatInput';\r\n\r\nexport const Chat = ({ sendMessage, showMenuButton }) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const textRef = useRef();\r\n    const { messages } = useSelector(state => state.dashboard);\r\n    const { uid } = useSelector(state => state.auth);\r\n    \r\n    const setRef = useCallback( node => {\r\n        if( node ) {\r\n            node.scrollIntoView({ behavior: 'smooth' })\r\n        }\r\n    }, [])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(textRef.current.value === ''){\r\n            textRef.current.value = '';\r\n        } else {\r\n            sendMessage(textRef.current.value);\r\n            textRef.current.value = '';\r\n        }\r\n    }\r\n\r\n    const handleOpen = () => setShow(true);\r\n    const handleClose = () => setShow(false);\r\n\r\n    return (\r\n        <>\r\n        <div className=\"chat w-100\">\r\n            <div className=\"bg-head-chat header-chat\">\r\n                <div className=\"d-flex align-items-center\">\r\n                    <img src=\"./assets/img1.jpg\" alt=\"Foto de perfil de grupo\" className=\"ms-3 img-topbar\"/>\r\n                    <span className=\"text-white fw-bold ms-3 text-resp\">Chat general</span>\r\n                </div>\r\n            \r\n                <div className=\"d-flex align-items-center justify-content-end\">\r\n                    <motion.button \r\n                        onClick={handleOpen}\r\n                        whileTap={ {scale: 2.5} }\r\n                        className=\"button-info mr-1rem\"\r\n                    >\r\n                        <IoIosInformationCircle />\r\n                    </motion.button>\r\n\r\n                    {showMenuButton && \r\n                    <motion.button\r\n                        onClick={() => dispatch( openSidebar() )}\r\n                        whileTap={ {scale: 2.5} }\r\n                        className=\"button-info mr-1rem\"\r\n                    >\r\n                        <AiOutlineMenu />\r\n                    </motion.button>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"overflow-auto pt-4 bg-chat container-chat\">\r\n                {(messages.length === 0) && \r\n                    <div className=\"alert alert-warning text-center mx-5 text-resp\">Todavía no hay mensajes, comienza escribiendo uno.</div>\r\n                }\r\n                {(messages.length > 0) &&\r\n                    messages.map((message, index) => {\r\n                        const lastMessage = messages.length - 1 === index;\r\n                        if(message.user._id === uid){\r\n                            return <div key={index} className=\"d-flex w-100 align-items-end flex-column\" ref={lastMessage ? setRef : null}>   \r\n                                <MessageSent \r\n                                    key={index} \r\n                                    text={message.message}\r\n                                    date={message.date}\r\n                                />\r\n                            </div>\r\n                        } else {\r\n                            return <div key={index} className=\"d-flex w-100 align-items-start flex-column\" ref={lastMessage ? setRef : null}>\r\n                                <MessageReceived \r\n                                    key={index} \r\n                                    text={message.message} \r\n                                    name={message.user.name}\r\n                                    date={message.date}\r\n                                />\r\n                            </div>\r\n                        }\r\n                    })\r\n                }\r\n            </div>\r\n           \r\n            <ChatInput textRef={textRef} handleSubmit={handleSubmit} />\r\n        </div>\r\n        <ModalInfo handleClose={handleClose} show={show}/>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nChat.propType = {\r\n    sendMessage: PropTypes.func.isRequired,\r\n    showMenuButton: PropTypes.func.isRequired\r\n}","import React, { useCallback, useEffect, useRef, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { motion } from 'framer-motion';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { AiOutlineMenu } from 'react-icons/ai';\r\nimport { IoIosInformationCircle } from 'react-icons/io';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { addChatMessages, openSidebar } from '../../actions/dashboard';\r\nimport { MessageReceived } from '../dashboard/MessageReceived';\r\nimport { MessageSent } from '../dashboard/MessageSent';\r\nimport { ModalInfo } from './ModalInfo';\r\nimport { ChatInput } from './ChatInput';\r\n\r\nexport const PrivateChat = ({ sendPrivateMessage, showMenuButton }) => {\r\n\r\n    const textRef = useRef();\r\n    const [show, setShow] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const { selectedUser } = useSelector(state => state.dashboard);\r\n    const { chatMessages } = useSelector(state => state.dashboard);\r\n    const { uid, name } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const setRef = useCallback( node => {\r\n        if( node ) {\r\n            node.scrollIntoView({ behavior: 'smooth' })\r\n        }\r\n    }, [])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(textRef.current.value === ''){\r\n            textRef.current.value = '';\r\n        } else {\r\n            sendPrivateMessage(textRef.current.value);\r\n            textRef.current.value = '';\r\n        }\r\n    }\r\n\r\n    const handleOpen = () => setShow(true);\r\n    const handleClose = () => setShow(false);\r\n\r\n    useEffect(() => {\r\n        //Solo si hay un usuario (chat) seleccionado\r\n        if(selectedUser?.uid) {\r\n            setLoading(true)\r\n            axios.get(`${process.env.REACT_APP_API_URL}/messages/get-all-chat/${uid}/${selectedUser?.uid}`, {\r\n                headers: {\r\n                    'x-token': localStorage.getItem('chat-token'),\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            .then( ( {data} ) => {\r\n                setLoading(false)\r\n                dispatch( addChatMessages(data.messagesChat) )\r\n            }) \r\n            .catch( err => {\r\n                Swal.fire('UPS, hubo un error cargando el chat');\r\n            })\r\n        }\r\n    }, [selectedUser?.uid, selectedUser?.name, uid, dispatch]); \r\n\r\n    return (\r\n        <>\r\n            <div className=\"chat w-100\">\r\n                <div className=\"bg-head-chat header-chat\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                            {selectedUser.picture !== 'null' \r\n                                ? <img src={selectedUser.picture} alt={selectedUser.name} className=\"ms-3  img-topbar\"/>\r\n                                : <img src=\"./assets/default-user.png\" alt=\"default\" className=\"ms-3 img-topbar\"/>\r\n                            }\r\n                        <span className=\"text-white fw-bold ms-3 text-resp\">\r\n                            {selectedUser.name} <i className=\"fas fa-circle mx-2 text-online\"></i>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center justify-content-end\">\r\n                        <motion.button \r\n                            onClick={handleOpen}\r\n                            whileTap={ {scale: 2.5} }\r\n                            className=\"button-info mr-1rem\"\r\n                        >\r\n                            <IoIosInformationCircle />\r\n                        </motion.button>\r\n                        {showMenuButton && \r\n                        <motion.button\r\n                                onClick={() => dispatch( openSidebar() )}\r\n                                whileTap={ {scale: 2.5} }\r\n                                className=\"button-info mr-1rem\"\r\n                            >\r\n                            <AiOutlineMenu />\r\n                        </motion.button>\r\n                        }\r\n                        \r\n                    </div>\r\n                </div>\r\n                <div className=\"overflow-auto pt-4 bg-chat container-chat\">\r\n                \r\n                {(loading) &&\r\n                    <div className=\"w-100 d-flex justify-content-center\">\r\n                        <Spinner animation=\"border\" role=\"status\" variant=\"primary\" />\r\n                    </div>\r\n                }\r\n                {(chatMessages && !loading && chatMessages.length === 0) &&\r\n                    <div className=\"alert alert-warning text-center text-resp mx-alert\">\r\n                        Aún no tienes mensajes con <strong>{selectedUser?.name}.</strong>\r\n                    </div>\r\n                }\r\n                {chatMessages &&\r\n                        chatMessages.map((message, index) => {\r\n                            const lastMessage = chatMessages.length - 1 === index;\r\n                            if(message.recipient !== uid){\r\n                                return <div key={index} className=\"d-flex w-100 align-items-end flex-column\" ref={lastMessage ? setRef : null}>\r\n                                    <MessageSent \r\n                                        key={index} \r\n                                        text={message.message}\r\n                                        date={message.date}\r\n                                    />\r\n                                </div>\r\n                            } else {\r\n                                return <div key={index} className=\"d-flex w-100 align-items-start flex-column\" ref={lastMessage ? setRef : null}>\r\n                                    <MessageReceived \r\n                                        key={index} \r\n                                        text={message.message} \r\n                                        date={message.date}\r\n                                    />\r\n                                </div>\r\n                            }\r\n                        })\r\n                    }\r\n                </div>\r\n            \r\n                <ChatInput textRef={textRef} handleSubmit={handleSubmit} />\r\n            </div>\r\n            <ModalInfo \r\n                handleClose={handleClose} \r\n                show={show}\r\n                participants={[name, selectedUser?.name]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { io } from 'socket.io-client';\r\nimport { addChatMessages, addMessages, addUsers, addAllUsers } from '../actions/dashboard';\r\nimport { setStats } from '../actions/stats';\r\n\r\nconst SocketContext = React.createContext();\r\n\r\nexport function useSocket() {\r\n    return useContext(SocketContext)\r\n}\r\n\r\nexport const SocketProvider = ( {children} ) => {\r\n\r\n    const [socket, setSocket] = useState();\r\n    const { uid, name, picture } = useSelector(state => state.auth);\r\n    const { selectedUser } = useSelector(state => state.dashboard);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const sendMessage = useCallback(( message ) => {\r\n       const now = new Date();\r\n       const date = moment(now).format('LT');\r\n\r\n        socket.emit('send-message',{message, user: uid, date})\r\n    }, [socket, uid]);\r\n\r\n    const sendPrivateMessage = useCallback(( message ) => {\r\n        const now = new Date();\r\n        const date = moment(now).format('LT');\r\n\r\n        socket.emit('send-private-message', [{message, date}, {uid: selectedUser.uid, name: selectedUser.name}]);\r\n    }, [selectedUser?.uid, selectedUser?.name, socket]);\r\n\r\n    useEffect(() => {\r\n        \r\n            const newSocket = io(process.env.REACT_APP_URL, {\r\n            query: { uid, name, picture }\r\n            })\r\n            setSocket(newSocket)     \r\n\r\n        return () => newSocket.close();\r\n    }, [uid, name, picture]);\r\n\r\n\r\n    useEffect(() => {\r\n        if(!socket) return;\r\n        socket.on('receive-messages', (payload) => {\r\n            dispatch( addMessages(payload) )\r\n        })\r\n\r\n        return () => socket.off('receive-messages')\r\n    }, [socket, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if(!socket) return;\r\n\r\n        socket.on('created-message', (payload) => {\r\n            dispatch( addMessages(payload) )\r\n        })\r\n\r\n        return () => socket.off('created-message')\r\n    }, [socket, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if(!socket) return;\r\n\r\n        socket.on('active-users', (payload) => {\r\n            dispatch( addUsers(payload) );\r\n        })\r\n\r\n        return () => socket.off('active-users')\r\n    }, [socket, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if(!socket) return;\r\n\r\n        socket.on('private-messages', (payload) => {\r\n            dispatch( addChatMessages(payload) )\r\n        })\r\n\r\n        return () => socket.off('private-messages')\r\n    }, [socket, dispatch]);\r\n\r\n    useEffect(() => {\r\n       if(!socket) return;\r\n\r\n       socket.on('registered-users', (payload) => {\r\n            dispatch( addAllUsers(payload) )\r\n       })\r\n       return () => socket.off('registered-users')\r\n    }, [socket, dispatch])\r\n\r\n  \r\n      useEffect(() => {\r\n        if(!socket) return;\r\n  \r\n        socket.on('get-stats', (payload) => {\r\n            dispatch( setStats(payload) )\r\n        })\r\n  \r\n        return () => socket.off('get-stats')\r\n    }, [socket, dispatch]); \r\n\r\n\r\n    const values = {\r\n        sendMessage,\r\n        sendPrivateMessage\r\n    }\r\n\r\n    return (\r\n        <SocketContext.Provider value={values}>\r\n            { children }\r\n        </SocketContext.Provider>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Aside } from './Aside';\r\nimport { AsideResponsive } from './AsideResponsive';\r\nimport { Chat } from './Chat';\r\nimport { selectUser } from '../../actions/dashboard';\r\nimport { PrivateChat } from './PrivateChat';\r\nimport { useSocket } from '../../context/SocketProvider';\r\nimport { Helmet } from 'react-helmet';\r\n\r\n\r\nexport const DashboardScreen = () => {\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n    const [width, setWidth] = useState(window.screen.width);\r\n    const { selectedUser, showSidebar } = useSelector(state => state.dashboard);\r\n    const {sendMessage, sendPrivateMessage} = useSocket();\r\n\r\n    useEffect(() => {\r\n\r\n        const windowResize = (e) => {\r\n            setWidth(e.target.innerWidth)\r\n        }\r\n        \r\n        window.addEventListener('resize', windowResize )\r\n\r\n        return () => window.removeEventListener('resize', windowResize)\r\n\r\n    }, [])\r\n    \r\n    return (  \r\n        <>\r\n            <Helmet>\r\n                <title>{ name } | ChatRoom</title>\r\n                <meta name=\"description\" content=\"Contenido principal del usuario y salas de chat\" />\r\n            </Helmet>\r\n            \r\n            <main>\r\n                <div id=\"container-grid\">\r\n\r\n                    {width > 900 &&\r\n                    <div className=\"p-0 aside-color\">\r\n                        <Aside /> \r\n                    </div>\r\n                    }\r\n\r\n                    {width <= 900 &&\r\n                    <div className={`p-0 aside-color aside-responsive ${showSidebar && 'aside-responsive-show'}`}>\r\n                        <AsideResponsive />\r\n                    </div>\r\n                    }\r\n\r\n\r\n                    <div className=\"p-0 d-flex\">\r\n                        <div className=\"d-flex column-chat-dimensions\" id=\"chat\">\r\n                            {selectedUser?.uid && selectUser?.name \r\n                            ? <PrivateChat \r\n                                sendPrivateMessage={sendPrivateMessage} \r\n                                showMenuButton={ width < 900 ? true : false } \r\n                            />\r\n                            : <Chat \r\n                                sendMessage={sendMessage} \r\n                                showMenuButton={ width < 900 ? true : false }\r\n                            />\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux';\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport {Helmet} from \"react-helmet\";\r\nimport { LinkButton } from '../dashboard/LinkButton';\r\n\r\nexport const StatisticsScreen = () => {\r\n\r\n    const {countMessages} = useSelector(state => state.stats)\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Stats | ChatRoom</title>\r\n                <meta name=\"description\" content=\"Estadisticas del chat general\" />\r\n            </Helmet>\r\n\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col md={12} className=\"p-0 bg-dark\">\r\n                        <div className=\"container-full\">\r\n                            <div className=\"px-3 py-2 bg-head-chat header-stats\">\r\n                                <LinkButton to=\"/\" text=\"Inicio\"/>\r\n                            </div>\r\n                            <h3 className=\"text-resp text-white text-center mt-5\">Usuarios que más mensajes han enviado</h3>\r\n                            <h4 className=\"text-resp text-info text-center mb-5\">En el chat general</h4>\r\n                            <ResponsiveContainer width=\"90%\" height=\"50%\" className=\"text-resp\">\r\n                                <BarChart\r\n                                    width={500}\r\n                                    height={300}\r\n                                    data={countMessages}\r\n                                    margin={{\r\n                                        top: 5,\r\n                                        right: 5,\r\n                                        left: 5,\r\n                                        bottom: 5,\r\n                                    }}\r\n                                >\r\n                                    <XAxis dataKey=\"name\" />\r\n                                    <YAxis />\r\n                                    <Tooltip />\r\n                                    <Legend />\r\n                                    <Bar dataKey=\"messages\" fill=\"#8884d8\" />\r\n                                </BarChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { FcGoogle } from 'react-icons/fc';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../../actions/auth';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n    width: 100%;\r\n    height: 42px;\r\n    margin-top: 1rem;\r\n    background-color: #4285F4;\r\n    border-radius: 5px;\r\n    color: white;\r\n    cursor: pointer;\r\n    display: grid;\r\n    grid-template-columns: 20% 80%;\r\n    transition: 0.2s ease;\r\n\r\n    &:hover {\r\n        background: #366fca;\r\n    }\r\n`;\r\nconst Logo = styled.div`\r\n    background: #fff;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-top-left-radius: 5px;\r\n    border-bottom-left-radius: 5px;\r\n`;\r\nconst Text = styled.div`\r\n    font-family: 'Roboto', sans-serif;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const GoogleButton = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const clientId = '257430794857-ifhr62u2i59t0snq8a3q4gns6k8or9a6.apps.googleusercontent.com';\r\n\r\n    const url = ( window.location.hostname.includes('localhost') )\r\n                ? 'http://localhost:5000/api/auth/google'\r\n                : 'https://room-chat-dan.herokuapp.com/api/auth/google'\r\n\r\n    const doFetch = async (id_token) => {\r\n        const data = { id_token }\r\n        fetch( url, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then( res => res.json() )\r\n        .then( ({uid, name, email, google, picture, token}) => {\r\n            dispatch( login({uid, name, email, google, picture}) );\r\n            localStorage.setItem('chat-token', token)\r\n        })\r\n        .catch( console.log )\r\n    }\r\n\r\n    const onSuccess = async (res) => {\r\n        const {tokenId} = res;\r\n        await doFetch(tokenId);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <GoogleLogin\r\n                clientId={clientId}\r\n                onSuccess={onSuccess}\r\n                cookiePolicy={'single_host_origin'}\r\n                className=\"mt-3 w-100 text-center\"\r\n                render={renderProps => (\r\n                    // <motion.div \r\n                    //     whileTap={{ scale: 1.1 }}\r\n                    //     onClick={renderProps.onClick} \r\n                    //     disabled={renderProps.disabled}\r\n                    //     className=\"google-btn\"\r\n                    // >\r\n                    //     <div className=\"logo\">\r\n                    //         <FcGoogle size=\"1.7rem\"/>\r\n                    //     </div>\r\n                    //     <div className=\"l-text\">Ingresar con Google</div>\r\n                    // </motion.div>\r\n                    <Div \r\n                        onClick={renderProps.onClick} \r\n                        disabled={renderProps.disabled}\r\n                    >\r\n                        <Logo>\r\n                             <FcGoogle size=\"1.7rem\"/>\r\n                         </Logo>\r\n                         <Text>Ingresar con Google</Text>\r\n                    </Div>\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Button, Container, Form } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {Helmet} from \"react-helmet\";\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { startLogin } from '../../actions/auth';\r\nimport { GoogleButton } from './GoogleButton';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n     //Validación del formulario\r\n     const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: ''\r\n        },\r\n        validationSchema: Yup.object({\r\n            email: Yup.string()\r\n                    .email( true )\r\n                    .required( true ),\r\n            password: Yup.string()\r\n                    .required( true )\r\n                    .min(8, true)\r\n        }),\r\n        onSubmit : (values) => {\r\n\r\n            const { email, password } = values;\r\n           \r\n            dispatch( startLogin(email, password) );\r\n        }   \r\n    });\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Chat | Login</title>\r\n                <meta name=\"description\" content=\"Inicio de sesión\" />\r\n            </Helmet>\r\n\r\n            <Container fluid className=\"bg-dark d-flex justify-content-center align-items-center container-full\">\r\n                <div className=\"form\">\r\n                    <Form onSubmit={formik.handleSubmit} className=\"animate__animated animate__fadeIn\">\r\n                        <h2 className=\"text-white text-start texto mb-0\">ChatRoom</h2>\r\n                        <p className=\"text-muted text-end\">por Daniel Díaz</p>\r\n                        <h4 className=\"text-white lead\">Inicio de sesión</h4>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Control \r\n                                autoComplete=\"off\"\r\n                                name=\"email\"\r\n                                className=\"bg-dark text-white\" \r\n                                type=\"email\" \r\n                                placeholder=\"Correo\" \r\n                                value={ formik.values.email }\r\n                                onChange={ formik.handleChange }\r\n                                onBlur={ formik.handleBlur }\r\n                                isInvalid={ formik.errors.email }\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Control \r\n                                name=\"password\"\r\n                                className=\"bg-dark text-white\" \r\n                                type=\"password\" \r\n                                placeholder=\"Contraseña\" \r\n                                value={ formik.values.password }\r\n                                onChange={ formik.handleChange }\r\n                                onBlur={ formik.handleBlur }\r\n                                isInvalid={ formik.errors.password }\r\n                            />\r\n                        </Form.Group>\r\n                        <Button type=\"submit\" variant=\"outline-primary\" className=\"w-100 mt-3\">\r\n                            Ingresar\r\n                        </Button>\r\n                        <GoogleButton />\r\n                        {/* <FacebookButton /> */}\r\n                        <Link to=\"/auth/register\" className=\"d-inline-block mt-3\">Si no tienes una cuenta</Link>\r\n                    </Form>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Button, Container, Form } from 'react-bootstrap';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { startRegister } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n     //Validación del formulario\r\n     const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            email: '',\r\n            password: ''\r\n        },\r\n        validationSchema: Yup.object({\r\n            name: Yup.string()\r\n                    .required( true )\r\n                    .min(3, true),\r\n            email: Yup.string()\r\n                    .email( true )\r\n                    .required( true ),\r\n            password: Yup.string()\r\n                    .required( true )\r\n                    .min(8, true)\r\n        }),\r\n        onSubmit : (values) => {\r\n\r\n            const { name, email, password } = values;\r\n           \r\n            dispatch( startRegister(name, email, password) );\r\n        }   \r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Chat | Register</title>\r\n                <meta name=\"description\" content=\"Registro de nuevo usuario\" />\r\n            </Helmet>\r\n\r\n            <Container fluid className=\"bg-dark d-flex flex-column justify-content-center align-items-center container-full\">\r\n                \r\n                <div className=\"form\">\r\n                    <Form onSubmit={formik.handleSubmit} className=\"animate__animated animate__fadeIn\">\r\n                        <h2 className=\"text-white text-start texto mb-0\">ChatRoom</h2>\r\n                        <p className=\"text-muted text-end\">por Daniel Díaz</p>\r\n                        <h4 className=\"text-white lead mt-3\">Registro</h4>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Control \r\n                                    autoComplete=\"off\"\r\n                                    name=\"name\"\r\n                                    className=\"bg-dark text-white\" \r\n                                    type=\"text\" \r\n                                    placeholder=\"Nombre\" \r\n                                    value={ formik.values.name }\r\n                                    onChange={ formik.handleChange }\r\n                                    onBlur={ formik.handleBlur }\r\n                                    isInvalid={formik.errors.name}\r\n                                />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Control \r\n                                    autoComplete=\"off\"\r\n                                    name=\"email\"\r\n                                    className=\"bg-dark text-white\" \r\n                                    type=\"email\" \r\n                                    placeholder=\"Correo\"  \r\n                                    value={ formik.values.email }\r\n                                    onChange={ formik.handleChange }\r\n                                    onBlur={ formik.handleBlur }\r\n                                    isInvalid={formik.errors.email}\r\n                                />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Control \r\n                                    name=\"password\"\r\n                                    className=\"bg-dark text-white\" \r\n                                    type=\"password\" \r\n                                    placeholder=\"Contraseña\" \r\n                                    value={ formik.values.password }\r\n                                    onChange={ formik.handleChange }\r\n                                    onBlur={ formik.handleBlur }\r\n                                    isInvalid={formik.errors.password}\r\n                                />\r\n                        </Form.Group>\r\n                        <Button type=\"submit\" variant=\"outline-primary\" className=\"w-100 mt-3\">\r\n                            Registrarme\r\n                        </Button>\r\n                        <Link to=\"/auth/login\" className=\"d-inline-block mt-3\">Si ya tienes una cuenta</Link>\r\n                    </Form>\r\n                </div>\r\n            </Container>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect,} from \"react-router-dom\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n\r\n                <Route \r\n                    path=\"/auth/login\"\r\n                    component={LoginScreen}\r\n                />\r\n\r\n                <Route \r\n                    path=\"/auth/register\"\r\n                    component={RegisterScreen}\r\n                />\r\n\r\n                <Redirect to=\"/auth/login\" />\r\n\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component : Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/login\" /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component : Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\n\r\nimport { DashboardScreen } from '../components/dashboard/DashboardScreen';\r\nimport { StatisticsScreen } from '../components/statistics/StatisticsScreen';\r\nimport { SocketProvider } from '../context/SocketProvider';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n\r\n    //se verifica el token cada vez que se renderiza de nuevo el AppRouter\r\n    useEffect(() => {\r\n        \r\n        dispatch( startChecking() );\r\n\r\n    }, [dispatch]);\r\n\r\n    if( checking ) {\r\n        return(\r\n            <div className=\"flexible\">\r\n                <div className=\"sk-chase\">\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                    <div className=\"sk-chase-dot\"></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <SocketProvider>\r\n             <Router>\r\n                <Switch>\r\n\r\n                    <PublicRoute \r\n                        isAuthenticated={!!uid}\r\n                        path=\"/auth\"\r\n                        component={ AuthRouter }\r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        isAuthenticated={!!uid}\r\n                        exact\r\n                        path=\"/\" \r\n                        component={ DashboardScreen }\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        isAuthenticated={!!uid}\r\n                        path=\"/stats\"\r\n                        component={ StatisticsScreen }\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n                </Switch>\r\n            </Router>\r\n        </SocketProvider>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n}\r\n\r\nexport const authReducer = (state= initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }    \r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n            \r\n        case types.authCheckingJWTFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.newUser: \r\n            return {\r\n                ...state,\r\n                newUser: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    messages: [],\r\n    users: [],\r\n    selectedUser: {},\r\n    chatMessages: [],\r\n    allUsers: [],\r\n}\r\n\r\nexport const dashboardReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.addMessages:\r\n            return {\r\n                ...state,\r\n                messages: action?.payload ? action.payload : []\r\n            }\r\n        case types.addUsers:\r\n            return {\r\n                ...state,\r\n                users: action.payload\r\n            }\r\n        case types.cleanDashboard: \r\n            return {\r\n                messages: [],\r\n                users: []\r\n            }\r\n        case types.selectUser: \r\n            return {\r\n                ...state,\r\n                selectedUser: action.payload\r\n            }\r\n        case types.addChatMessages: \r\n            return {\r\n                ...state,\r\n                chatMessages: action.payload\r\n            }\r\n        case types.addAllUsers: \r\n            return {\r\n                ...state,\r\n                allUsers: action.payload\r\n            }\r\n        case types.openSidebar: \r\n            return {\r\n                ...state,\r\n                showSidebar: true\r\n            }\r\n        case types.closeSidebar: \r\n            return {\r\n                ...state,\r\n                showSidebar: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    countMessages: []\r\n}\r\n\r\nexport const statsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.loadStats:\r\n            return {\r\n                ...state,\r\n                countMessages: action.payload\r\n            }\r\n        case types.cleanStats:\r\n            return {\r\n                countMessages: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { dashboardReducer } from '../reducers/dashboardReducer';\r\nimport { statsReducer } from '../reducers/statsReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    dashboard: dashboardReducer,\r\n    stats: statsReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers( applyMiddleware(thunk) )\r\n)","import { AppRouter } from './router/AppRouter';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\nimport './css/app.css';\r\nimport 'animate.css';\r\n\r\nfunction App() {\r\n\r\n  return(\r\n    <Provider store={ store }>\r\n      <AppRouter />    \r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/js/dist/dropdown';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}